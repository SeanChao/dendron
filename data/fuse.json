{"keys":[{"path":["title"],"id":"title","weight":1,"src":"title"},{"path":["body"],"id":"body","weight":1,"src":"body"}],"records":[{"i":0,"$":{"0":{"v":"This page has not yet sprouted","n":0.408},"1":{"v":"[Dendron](https://dendron.so/) (the tool used to generate this site) lets authors selective publish content. You will see this page whenever you click on a link to an unpublished page\n\n![](https://foundation-prod-assetspublic53c57cce-8cpvgjldwysl.s3-us-west-2.amazonaws.com/assets/images/not-sprouted.png)","n":0.189}}},{"i":1,"$":{"0":{"v":"root","n":1},"1":{"v":"\nðŸ‘‹ This is the root of SeanChao's Dendron vault.\n\nðŸ”— [repo](https://github.com/SeanChao/Dendron)\n","n":0.316}}},{"i":2,"$":{"0":{"v":"Web3","n":1}}},{"i":3,"$":{"0":{"v":"Blockchain","n":1}}},{"i":4,"$":{"0":{"v":"Solana","n":1},"1":{"v":"\n## Vanity Address Generation\n\n    solana-keygen grind --starts-and-ends-with prefix:suffix:numberToGenerate --num-threads 4\n\nThe generated private key is an array of bytes, convert to hex string in Python: ![[python.number#bytes-array-to-hex-string,1]]\n","n":0.2}}},{"i":5,"$":{"0":{"v":"Sql","n":1}}},{"i":6,"$":{"0":{"v":"Postgres","n":1}}},{"i":7,"$":{"0":{"v":"Operators","n":1},"1":{"v":"\n## `IN`\n\n```sql\nvalue IN (value1,value2,...) -- expression\nvalue IN (SELECT ...)\n```\n","n":0.333}}},{"i":8,"$":{"0":{"v":"Functions_operators","n":1},"1":{"v":"\n## Conditional Expressions\n\n```sql\nCASE WHEN condition THEN result\n     [WHEN ...]\n     [ELSE result]\nEND\n```\n\n## Reference\n\nhttps://www.postgresql.org/docs/current/functions.html\n","n":0.289}}},{"i":9,"$":{"0":{"v":"Pki","n":1}}},{"i":10,"$":{"0":{"v":"Gpg","n":1},"1":{"v":"\n## Exporting & Importing\n\n```\ngpg --export-secret-keys <key-id> > key\ngpg --import key\n```\n","n":0.316}}},{"i":11,"$":{"0":{"v":"Node","n":1}}},{"i":12,"$":{"0":{"v":"Npm","n":1},"1":{"v":"\n[config](https://docs.npmjs.com/cli/v7/using-npm/config)\n\n```sh\nnpm install \\\n  --registry https://example.com\n  --fetch-retry-maxtimeout 10000\n```\n","n":0.378}}},{"i":13,"$":{"0":{"v":"Machine_learning","n":1}}},{"i":14,"$":{"0":{"v":"Model_size","n":1},"1":{"v":"\nGet the model size (the number of parameters) for pytorch and tensorflow:\n\n```python\nsum(p.numel() for p in model.parameters() if p.requires_grad) for pytorch and\nnp.sum([np.prod(v.shape) for v in tf.trainable_variables]) for tensorflow\n```\n","n":0.192}}},{"i":15,"$":{"0":{"v":"Latex","n":1}}},{"i":16,"$":{"0":{"v":"Commands","n":1},"1":{"v":"\n## Define Commands\n\n```tex\n\\newcommand{\\CmdName}{content}\n\n\\newcommand{\\bb}[1]{\\mathbb{#1}} % command with 1 argument, #1 -- #9 refer to the arguments\n\\bb{C}\n\n\\newcommand{\\plusbinomial}[3][2]{(#2 + #3)^#1} % 2 is the default value for the first argument\n```\n\n## Reference\n\n- https://www.overleaf.com/learn/latex/Commands\n","n":0.186}}},{"i":17,"$":{"0":{"v":"Wsl","n":1},"1":{"v":"\n## Resize VHDX file\n\nIn Windows Pro\n\n- enable HyperV tools in control panel > windows features\n- `wsl --shutdown`\n- admin mode: `optimize-vhd -Path xxx.vhdx -Mode full`\n","n":0.204}}},{"i":18,"$":{"0":{"v":"Web","n":1}}},{"i":19,"$":{"0":{"v":"Server","n":1}}},{"i":20,"$":{"0":{"v":"Caddy","n":1},"1":{"v":"\n> [CLI reference](https://caddyserver.com/docs/command-line)\n\n## Docker\n\nâš  Don't forget to map ports or use host network!\n\n```sh\ndocker run caddy caddy file-server\n```\n\n## Caddyfile\n\n```Caddyfile\n\n```\n\n## File server\n\n```sh\ncaddy file-server\n\t[--root <path>]\n\t[--listen <addr>]\n\t[--domain <example.com>]\n\t[--browse]\n\t[--templates]\n\t[--access-log]\n\ndocker run --network host -v $PWD:/srv caddy caddy file-server --root /srv --listen localhost:2333 -browse\n```\n\n## Reverse Proxy\n\n```\nroute /stgui/* {\n  uri strip_prefix /stgui\n  reverse_proxy syncthing:8384\n}\n```\n","n":0.147}}},{"i":21,"$":{"0":{"v":"Vim","n":1},"1":{"v":"\nVim cheatsheet.\n\n## Cheatsheets\n\n- [vim.rtorr.com](https://vim.rtorr.com/)\n\n## Reference\n\n- Online [Vim help files](https://vimhelp.org/)\n","n":0.333}}},{"i":22,"$":{"0":{"v":"Moving","n":1},"1":{"v":"\n## Moving around\n\n```text\n                        +---------------------------+\n                H -->   | text sample text          |\n                        | sample text               |\n                        | text sample text          |\n                        | sample text               |\n                M -->   | text sample text          |\n                        | sample text               |\n                        | text sample text          |\n                        | sample text               |\n                L -->   | text sample text          |\n                        +---------------------------+\n```\n\n### Scrolling\n\n```text\n                                       +----------------+\n                                       | some text      |\n                                       | some text      |\n                                       | some text      |\n        +---------------+              | some text      |\n        | some text     |  CTRL-U  --> |                |\n        |               |              | 123456         |\n        | 123456        |              +----------------+\n        | 7890          |\n        |               |              +----------------+\n        | example       |  CTRL-D -->  | 7890           |\n        +---------------+              |                |\n                                       | example        |\n                                       | example        |\n                                       | example        |\n                                       | example        |\n                                       +----------------+\n\nzz: focus on current line\n```\n\n## Marks and Jump\n\n`` ` ` ``, `''`: [JUMP] jump back (to exact column, beginning of line)\n\n`CTRL-O`: jumps to older positions\n\n`CTRL-I`: jumps to newer positions\n\n`ms`: mark current position to s\n\n`` `s``, `'s`: jump to mark s\n\n        '       The cursor position before doing a jump\n        \"       The cursor position when last editing the file\n        [       Start of the last change\n        ]       End of the last change\n","n":0.073}}},{"i":23,"$":{"0":{"v":"Making Changes","n":0.707},"1":{"v":"\nðŸ”— [vimhelp](https://vimhelp.org/usr_04.txt.html)\n\n## Common\n\n        X  stands for  dh  (delete character left of the cursor)\n        D  stands for  d$  (delete to end of the line)\n        C  stands for  c$  (change to end of the line)\n        s  stands for  cl  (change one character)\n        S  stands for  cc  (change a whole line)\n\n## Clipboard\n\nTo copy a line to the clipboard:\n\n        \"*yy\n\nTo put text from the clipboard back into the text:\n\n        \"*p\n\n## Text Objects\n\n        diw     delete a word (excluding right white space)\n        daw     delete a word (including right white space)\n        cis     change inner sentence\n","n":0.107}}},{"i":24,"$":{"0":{"v":"Folding","n":1},"1":{"v":"\n`zc`, `zo`, `za`: close, open, toggle a fold\n","n":0.354}}},{"i":25,"$":{"0":{"v":"Tldr","n":1},"1":{"v":"\n[TLDR](https://tldr.dendron.so)\n","n":1}}},{"i":26,"$":{"0":{"v":"Ssh","n":1},"1":{"v":"\n## SSH Client Config File\n\n```ssh\nHost example.com\n  HostName example.com\n  Port 2333\n  User shinji\n  IdentityFile ~/.ssh/id_rsa # Use private key\n```\n\nOn the target machine: add the public key into `~/.ssh/authorized_keys`\n\n## Key Management\n\n### Private Key Permissions\n\nThe private key should be owner read only (0400). ^pkp\n\nSee also: [[FS permissions|filesystem#Permissions]]\n","n":0.151}}},{"i":27,"$":{"0":{"v":"Shell","n":1},"1":{"v":"\n    [[ ! -f file ]] # exist: 1\n","n":0.333}}},{"i":28,"$":{"0":{"v":"Security","n":1}}},{"i":29,"$":{"0":{"v":"HTTPS","n":1},"1":{"v":"\nCert expiration:\nopenssl x509 -enddate -noout -in cert\n","n":0.378}}},{"i":30,"$":{"0":{"v":"Rust","n":1},"1":{"v":"\n    curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n","n":0.333}}},{"i":31,"$":{"0":{"v":"Thread","n":1},"1":{"v":"\n## Scheduling\n\n    thread::sleep(time::Duration::from_secs(1));\n    thread::sleep(std::time::Duration::from_millis(500));\n","n":0.5}}},{"i":32,"$":{"0":{"v":"String","n":1},"1":{"v":"\n[String](https://doc.rust-lang.org/std/string/struct.String.html)\n\n```rust\npub fn ends_with<'a, P>(&'a self, pat: P) -> bool\nwhere\n    P: Pattern<'a>,\n    <P as Pattern<'a>>::Searcher: ReverseSearcher<'a>,\n```\n\nReturns `true` if the given pattern matches a suffix of this string slice.\n\n```rust\nassert_eq!(\"bar:foo\".strip_suffix(\":foo\"), Some(\"bar\"));\nassert_eq!(\"bar:foo\".strip_suffix(\"bar\"), None);\nassert_eq!(\"foofoo\".strip_suffix(\"foo\"), Some(\"foo\"));\n\nassert_eq!(\"11foo1bar11\".trim_end_matches('1'), \"11foo1bar\");\nassert_eq!(\"123foo1bar123\".trim_end_matches(char::is_numeric), \"123foo1bar\");\n\nlet x: &[_] = &['1', '2'];\nassert_eq!(\"12foo1bar12\".trim_end_matches(x), \"12foo1bar\");\n```\n\nTurn `Vec<u8>` into `String`: `str::from_utf8(buf)`\n","n":0.154}}},{"i":33,"$":{"0":{"v":"Profiling","n":1},"1":{"v":"\nRelease build with debug info:\n\n```toml\n[profile.release]\nopt-level = 3\ndebug = 1\n```\n\n## Valgrind DHAT\n\n    valgrind --tool=dhat ./prog\n","n":0.267}}},{"i":34,"$":{"0":{"v":"Loop","n":1},"1":{"v":"\n## Range\n\nrange with step\n\n```rust\nfor i in (0..10).step_by(2) {\n\tprintln!(\"{}\", i);\n}\n```\n","n":0.333}}},{"i":35,"$":{"0":{"v":"Logger","n":1},"1":{"v":"\n## [simple_logger](https://docs.rs/simple_logger/2.1.0/simple_logger/)\n\n`simple_logger = \"2.1.0\"`\n\n```\n// Just initialize logging without any configuration:\nsimple_logger::init().unwrap();\n// Set the log level from the RUST_LOG environment variable:\nsimple_logger::init_with_env().unwrap();\n// Hardcode a default log level:\nsimple_logger::init_with_level(log::Level::Warn).unwrap();\n```\n","n":0.204}}},{"i":36,"$":{"0":{"v":"Common","n":1},"1":{"v":"\n## Loop\n\nIndexed for loop:\n\n```\nfor (i, e) in vec.iter().enumerate() {\n}\n```\n","n":0.333}}},{"i":37,"$":{"0":{"v":"Cargo","n":1},"1":{"v":"\n## Release\n\n```\ncargo build --release\n```\n","n":0.5}}},{"i":38,"$":{"0":{"v":"Vec","n":1},"1":{"v":"\n[doc](https://doc.rust-lang.org/std/vec/struct.Vec.html)\n\nEmptiness: `pub fn is_empty(&self) -> bool`\n\n`Vec` can be used as a stack:\n\n```rust\nlet v = Vec::new();\nv.push(1);\nlet i = v.pop().unwrap();\n```\n\n## Slicing\n\nCreate a sub array:\n\n```rust\nlet v = vec![1, 2, 3, 4, 5];\nlet slice: &[i32] = &v[1..3];\nlet sub_v: Vec<i32> = v[0..].to_vec();\n```\n","n":0.164}}},{"i":39,"$":{"0":{"v":"Release","n":1}}},{"i":40,"$":{"0":{"v":"Semantic Versioning","n":0.707},"1":{"v":"\n[semver.org](https://semver.org/)\n\nMAJOR.MINOR.PATCH\n\n- MAJOR version when you make incompatible API changes,\n- MINOR version when you add functionality in a backwards compatible manner, and\n- PATCH version when you make backwards compatible bug fixes.\n","n":0.183}}},{"i":41,"$":{"0":{"v":"Redis","n":1}}},{"i":42,"$":{"0":{"v":"Notifications","n":1},"1":{"v":"\n    PUBLISH __keyspace@0__:mykey del # notifies a key\n    PUBLISH __keyevent@0__:del mykey # notifies an event\n\n## Configuration\n\n```text\nK     Keyspace events, published with __keyspace@<db>__ prefix.\nE     Keyevent events, published with __keyevent@<db>__ prefix.\n\nA     All.\n\n# in redis.conf:\nnotify-keyspace-events Kx\n```\n\nWatch events:\n\n```sh\nredis-cli --csv psubscribe '__key*__:*'\n```\n","n":0.167}}},{"i":43,"$":{"0":{"v":"Python","n":1}}},{"i":44,"$":{"0":{"v":"Snippets","n":1},"1":{"v":"\n## With\n\nopen multiple files:\n\n```python3\nwith open('a', 'w') as a, open('b', 'w') as b:\n    do_something()\n```\n\n[1](https://stackoverflow.com/questions/4617034/how-can-i-open-multiple-files-using-with-open-in-python)\n","n":0.277}}},{"i":45,"$":{"0":{"v":"Pip","n":1},"1":{"v":"\n## Options\n\n    --default-timeout=15\n","n":0.577}}},{"i":46,"$":{"0":{"v":"Number","n":1},"1":{"v":"\n## Hex\n\n### Bytes Array to Hex String\n\npad with `0` to length of `2` in hex\n\n```python\n''.join([f\"{b:02x}\" for b in bytes_array])\n# [1, 255] -> '01ff'\n```\n","n":0.209}}},{"i":47,"$":{"0":{"v":"Fs","n":1},"1":{"v":"\n## Directories\n\nGet parent dir:\n\nfrom pathlib import Path\npath = Path(\"/here/your/path/file.txt\")\nprint(path.parent.absolute())\n\nmkdir -p: `os.makedirs(xx, exist_ok=True)`\n","n":0.289}}},{"i":48,"$":{"0":{"v":"Datetime","n":1},"1":{"v":"\n```\nimport datetime\ndate = datetime.datetime.now()\ndate.strftime(\"%Y-%m-%d\")\n```\n\nSee also [[datetime#format-string]]\n","n":0.408}}},{"i":49,"$":{"0":{"v":"Node.js","n":1}}},{"i":50,"$":{"0":{"v":"String","n":1},"1":{"v":"\n## Replace\n\n    String.prototype.replace() -> replace only the first occurrence\n    String.prototype.replaceAll()\n\n## strip\n\n```javascript\nif (str.startsWith('http://')) {\n  str = str.substring(7);\n}\n```\n","n":0.25}}},{"i":51,"$":{"0":{"v":"Package_manager","n":1},"1":{"v":"\n## Install Denpendencies\n\n- update a denpendency to the latest version `npm install xxx@latest`\n","n":0.277}}},{"i":52,"$":{"0":{"v":"Docker","n":1},"1":{"v":"\n## Build a Docker Image\n\nCreate a `Dockerfile`:\n\n```Dockerfile\nFROM node:alpine\n\n# Create app directory\nWORKDIR /usr/src/app\n\n# Install app dependencies\n# A wildcard is used to ensure both package.json AND package-lock.json are copied\n# where available (npm@5+)\nCOPY package*.json ./\n\nRUN npm install\n# If you are building your code for production\n# RUN npm ci --only=production\n\n# Bundle app source\nCOPY . .\n\nEXPOSE 8080\nCMD [ \"node\", \"server.js\" ]\n```\n\n## Usage in `docker-compose`\n\n```yaml\nservices:\n  app:\n    restart: on-failure\n    build:\n      context: .\n      dockerfile: app.Dockerfile\n    image: 'node:alpine'\n    volumes:\n      - './app.js:/usr/src/app.js'\n    command: 'node app.js'\n```\n\nNote the mounting point should be consistent with the `Dockerfile`.\n\nSee also [[docker.compose]]\n","n":0.108}}},{"i":53,"$":{"0":{"v":"Base64","n":1},"1":{"v":"\n## Decoding\n\n```javascript\nBuffer.from(base64_string, 'base64').toString('utf8');\n```\n","n":0.577}}},{"i":54,"$":{"0":{"v":"Array","n":1},"1":{"v":"\n`concat`\n\nThe concat() method is used to merge two or more arrays. This method does not change the existing arrays, but instead returns a **new** array.\n","n":0.2}}},{"i":55,"$":{"0":{"v":"Makefile","n":1},"1":{"v":"\n    $@ target name\n    $? prerquisites newer than the target\n    $^ all prerequisites\n\n## Additional Variables\n\n```sh\nmake KEY=VALUE\n```\n","n":0.25}}},{"i":56,"$":{"0":{"v":"JavaScript","n":1}}},{"i":57,"$":{"0":{"v":"Prettier","n":1},"1":{"v":"\n    yarn add -D prettier\n    yarn prettier -w **/*.md\n\n```json\n{\n  \"singleQuote\": true\n}\n```\n\nAdd a precommit hook: https://prettier.io/docs/en/precommit.html\n","n":0.258}}},{"i":58,"$":{"0":{"v":"GitHub Actions","n":0.707},"1":{"v":"\nGithub actions snippets.\n\n[Syntax reference](https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions)\n\n```yml\non:\n  schedule:\n    - cron: '0 20 */3 * *' # Runs at 20:00 UTC every 3 days.\n\non:\n  push:\n    branches:\n      - main\n      - dev\n\njobs:\n  job1:\n  job2:\n    needs: job1 # skip if job1 failed\n  job3:\n    needs: [job1, job2]\n    runs-on: ubuntu-latest\n    steps:\n      - uses: ncipollo/release-action@v1\n        with:\n          allowUpdates: true\n          artifacts: \"target/release/file\"\n          token: ${{ secrets.GITHUB_TOKEN }}\n      - name: Deploy ðŸš€\n        uses: JamesIves/github-pages-deploy-action@4.1.5\n        with:\n          branch: gh-pages # The branch the action should deploy to.\n          folder: build # The folder the action should deploy.\n```\n","n":0.112}}},{"i":59,"$":{"0":{"v":"Cache","n":1},"1":{"v":"\nExamples to cache dependencies in GitHub actions.\n\n## NPM\n\n```yml\n- name: Cache NPM dependencies\n  uses: actions/cache@v2\n  with:\n    path: |\n      **/node_modules\n    key: ${{ runner.os }}-${{ hashFiles('**/yarn.lock') }}\n```\n\n## Rust/Cargo\n\n```yml\n- uses: actions/cache@v2\n  with:\n    path: |\n      ~/.cargo/bin/\n      ~/.cargo/registry/index/\n      ~/.cargo/registry/cache/\n      ~/.cargo/git/db/\n      target/\n    key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}\n```\n","n":0.156}}},{"i":60,"$":{"0":{"v":"Git","n":1},"1":{"v":"\nRevert local changes:\n\n    git checkout .\n    git clean -fd # force, and recursive into dirs\n\nRoll back to previous commit\n\n    git checkout -b old xxxxxx\n    git reset --hard xxxxxx # beware!\n\nRevert local modifications to a file:\n\n    git checkout HEAD -- <file>\n\nRevert the initial commit:\n\n    git update-ref -d HEAD # Update the object name stored in a ref safely, delete HEAD\n\nTurn off paged output:\n\n    git config --global pager.branch false\n\nSquash and merge:\n\n    git merge --squash bugfix\n\n## Clean up\n\nlist merged branches:\n\n    git branch --merged origin/main\n","n":0.111}}},{"i":61,"$":{"0":{"v":"Tag","n":1},"1":{"v":"\nCreate a tag:\n\ngit tag v0.1.0 # HEAD\ngit tag v0.1.0 <commit>\n\ndelete a tag: `git tag -d v0.1.0`\n\npush a tag: `git push origin v0.1.0`\n","n":0.213}}},{"i":62,"$":{"0":{"v":"Submodule","n":1},"1":{"v":"\n- pull all submodules in a repo: `git submodule update --init --recursive`, remove `--init` if it's not the first time.\n","n":0.224}}},{"i":63,"$":{"0":{"v":"Stash","n":1},"1":{"v":"\nName a stash: `git stash -m format`\n","n":0.378}}},{"i":64,"$":{"0":{"v":"Filesystem","n":1},"1":{"v":"\n## Permissions\n\nPermission string = direcotry(1) + owner, owning group, everyone else permissions\n\n```\ndrwxr-xr-x\nThis is a directory\nowner: read, add/remove files, enter the directory\n```\n\n### Octal Representation\n\nrwx represent a bit respectively.\n\ne.g, r--rw-rwx = 100110111 = 0467\n\n## APIs\n\nmkdir\n\n![[python.fs#directories]]\n","n":0.174}}},{"i":65,"$":{"0":{"v":"Docker","n":1},"1":{"v":"\n## Installation\n\n```\ncurl https://get.docker.com | sh\nsudo curl -L \"https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)\" -o /usr/local/bin/docker-compose\nchmod +x /usr/local/bin/docker-compose\n```\n","n":0.267}}},{"i":66,"$":{"0":{"v":"Proxy","n":1},"1":{"v":"\n## Daemon\n\nEdit `/etc/default/docker`:\n\n```sh\nexport HTTPS_PROXY=\"http://sean-laptop.local:1080\"\nexport HTTP_PROXY=\"http://sean-laptop.local:1080\"\n```\n\n## Client\n\nEdit `~/.docker/config.json`\n\n```json\n{\n  \"proxies\": {\n    \"default\": {\n      \"httpProxy\": \"http://192.168.1.12:3128\",\n      \"httpsProxy\": \"http://192.168.1.12:3128\",\n      \"noProxy\": \"*.test.example.com,.example2.com,127.0.0.0/8\"\n    }\n  }\n}\n```\n\n## Reference\n\n- https://docs.docker.com/config/daemon/systemd/\n- https://docs.docker.com/network/proxy/#configure-the-docker-client\n","n":0.213}}},{"i":67,"$":{"0":{"v":"Compose","n":1},"1":{"v":"\n## Compose File\n\nReference: [compose-file-v3](https://docs.docker.com/compose/compose-file/compose-file-v3)\n\nTemplate\n\n```yml\nversion: '3'\n\nservices:\n  caddy:\n    restart: on-failure\n    image: 'caddy'\n    volumes:\n      - './caddy/Caddyfile:/etc/caddy/Caddyfile'\n    network_mode: host\n  mirror:\n    build:\n      context: .\n      dockerfile: Dockerfile\n      command: ['-p', '3000']\n  tg:\n    restart: on-failure\n    image: telegrammessenger/proxy\n    ports:\n      - '2333:443'\n    env_file:\n      - tg.env\n```\n\n## CLI\n\n```text\n  -f, --file FILE             Specify an alternate compose file\n                              (default: docker-compose.yml)\n```\n","n":0.147}}},{"i":68,"$":{"0":{"v":"Devenv","n":1}}},{"i":69,"$":{"0":{"v":"Valgrind","n":1},"1":{"v":"\n    sudo apt-get install valgrind\n","n":0.447}}},{"i":70,"$":{"0":{"v":"Deployment","n":1}}},{"i":71,"$":{"0":{"v":"Vercel","n":1},"1":{"v":"\nIgnore build for non-feature branch:\n\n    bash -c '[[ ! -f package.json ]]'\n","n":0.289}}},{"i":72,"$":{"0":{"v":"Dendron","n":1},"1":{"v":"\n## CLI\n\n```sh\n# dev preview\nyarn dendron buildSite  --stage dev --serve\n# build production\nyarn dendron-cli -- buildSiteV2 --wsRoot .  --stage prod\n```\n","n":0.236}}},{"i":73,"$":{"0":{"v":"Datetime","n":1},"1":{"v":"\n## Format String\n\n`%Y` year, e.g. 2000  \n`%m` month, e.g. 08  \n`%d` day, e.g. 04\n","n":0.267}}},{"i":74,"$":{"0":{"v":"Crontab","n":1},"1":{"v":"\nEdit crontab\n\n    crontab -e\n\n## Grammar\n\nAfter reboot:\n\n    @reboot [path to command] [argument1] [argument2] â€¦ [argument n]\n","n":0.258}}}]}
